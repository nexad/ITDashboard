// <auto-generated />
using System;
using Infra.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.API.Migrations
{
    [DbContext(typeof(InfraDBContext))]
    [Migration("20220422183502_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Infra.API.Entities.GlobalEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GlobalEnvironment");
                });

            modelBuilder.Entity("Infra.API.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FQDN")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GlobalEnvironmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GlobalEnvironmentId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Infra.API.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SolutionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("SolutionId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Infra.API.Entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("Infra.API.Entities.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("Infra.API.Entities.Server", b =>
                {
                    b.HasOne("Infra.API.Entities.GlobalEnvironment", "GlobalEnvironment")
                        .WithMany("Servers")
                        .HasForeignKey("GlobalEnvironmentId");

                    b.Navigation("GlobalEnvironment");
                });

            modelBuilder.Entity("Infra.API.Entities.Service", b =>
                {
                    b.HasOne("Infra.API.Entities.Server", "Server")
                        .WithMany("Services")
                        .HasForeignKey("ServerId");

                    b.HasOne("Infra.API.Entities.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId");

                    b.HasOne("Infra.API.Entities.Solution", "Solution")
                        .WithMany("Services")
                        .HasForeignKey("SolutionId");

                    b.Navigation("Server");

                    b.Navigation("ServiceType");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("Infra.API.Entities.GlobalEnvironment", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("Infra.API.Entities.Server", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Infra.API.Entities.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Infra.API.Entities.Solution", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
